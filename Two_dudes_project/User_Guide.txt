#############################################
# Title: 	Classifier 
# Team:	 	Two Dudes 
# Team Members: Stephen Garcia & Marco Zamora
# Technology:	Python
# OS:		Windows
#############################################

Inital Set-up:
This program uses Graphviz in order to create the visual representation of the decision tree.
We had issues getting this to run outside of an IDE and had to follow these steps in order for 
the classifier to generate the png through the command line.

1. If you do not have Graphviz installed on your machine please go to 
   https://graphviz.org/download/ and install. Please select to add path 
   to windows system path for all users and reboot.
2. Once installed open a command prompt with Administrative rights and 
   perform dot -c (this command is expecting graphviz binaries to be in your path)

#############################################

Test Run:
1.  From a windows command prompt or from an IDE navigate to the folder containing
    CS4373_Project_TwoDudes.py

2.  You will be presented a simple text menu:
    Please choose any choice from below -

    (1) Load Dataset
    (2) Decision Tree Induction
    (3) Naive Bayes Classifier
    (4) KNN Classifier
    (5) Exit the Application

3.  Type: 1

4.  You will be directed to input a csv filename
    Input a csv file to load, please include file name and .csv extension

5.  Type: pc_purchase.csv

6.  You will be asked if you would like to view the contents of your file
    Type: y

7.  You will be asked if you would like to perform more operations
    Type: y

8.  You will be brought to the main menu
    Type: 2

9.  You will be presented with the Decision Tree Classifier menu
    Your decision tree has loaded!
    Please choose any choice from below -

    (1) View Graphical Tree
    (2) View Text Tree
    (3) Test the Accuracy of the Tree
    (4) Generate a prediction based on a tuple
    (5) Test built in classifier
    (6) Return to Main

10. type: 1
    a window should open displaying the graphical representation of the tree if it does not we 
    have provided a sample png with the project of a tree generated by this program.

11. Do you want to perform more decision tree operations? (y / n)
    type: y

12. type: 2
    a text based representation of the tree  will be displayed

13. type: y

14. type: 3
    the prediction accuracy of the tree on the testing set will be performed and displayed as a percentage

15. type: y

16. type: 4
    still need to do

17. type: y

18. type: 5
    the prediction accuracy of the built in functionality will be displayed as a percentage

20. type: 6
    returned to main menu

21. type: 3
    You will be brought to the Naive Bayes Classifier Menu

22. You will be presented with the Naive Bayes Classifier Menu

    (1) Test Accuracy
    (2) Make prediction
    (3) Return to Main

23. type: 1
    This will test the accuracy of the trained Naive Bayes Classifier against testing data

24. You'll be presented with the results
    Accuracy of Naive Bayes Model = 66.0

25. Do you want to perform more naive bayes operations? (y / n)
    You'll be presented with the following menu asking if you want to use the
    Naive Bayes Classifier again. In my case I will.

26. type: y

27. You'll again be presented with the bayes menu

    (1) Test Accuracy
    (2) Make prediction
    (3) Return to Main

28. type: 2
    This will launch the Make prediction function

29. You will be met with these following prompts.

Please enter the test list to classify.
Pleas enter list seperated by commas e.g. "1,2,3,4,5"

Enter list for test:

30. Read the instructions above and enter a response with required
    information to make a proper prediction. User needs to have knowledge
    of the dataset they are using for the classifier. Enter all necessary
    features and leave out the target as follows... e.g. purple, small, dip, child
    or 12, 23, 45, 89. Separate the values with commas.

    type: list, to, test, out, classification, here

31. The next prompt will pop up.
    Does this data set have categorical data? (y/n)
    If categorical is present type y, else n
    type: y

32. the built in function will display the user's test list and the predicted class

33. You'll be asked if you like to continue with the bayes classifier.
    type: n

34. You'll be brought back to the main menu again.
    type: 4

35. You'll be taken to the knn menu

    (1) Test Accuracy
    (2) Make prediction
    (3) Return to Main

36. type: 1

37. You will be asked if the dataset contains categorical variables.
    If yes type y, else type n

    type: y

38. The function will then display the accuracy of the KNN model

39. You will be asked if you like to continue with the KNN classifier
    type: y

40. You will return to the knn menu

41. type: 2

42. This will take you the menu below...

    Please enter the test list to classify.
    Pleas enter list seperated by commas e.g. "1,2,3,4,5" or "cat, dog, frog"

    Enter list for test: purple, small, dip, child <<< example list to type in, can be numerical or categorical

43. After typing in your test you will see this next prompt...
    How many clusters would you like:
    type: number of cluser <<< has to be an int

44. You will them be prompted.... type y if categorical, n if otherwise
    Does this data set have categorical data? (y/n)
    type: y (or) n

45. Function will then display the classification information.

46. Then you will be asked to continue using the knn classifier
    type: n
47. type: 5 (quit app)